
import java.sql.Date;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author David
 */
public class RoomSchedulerFrame extends javax.swing.JFrame {
    
    private ResultSetTableModel reservationsTableModel;
    private ResultSetTableModel waitListTableModel; 
    private ResultSetTableModel reservationsTableModelByFaculty;
    private ResultSetTableModel waitListTableModelByFaculty; 
    private ReservationQueries reservationQueries;
    private WaitlistQueries waitlistQueries;
    private RoomQueries roomQueries;
    
    //private ArrayList<RoomEntry> rooms; 
    
    /**
     * Creates new form RoomSchedulerFrame
     */
    public RoomSchedulerFrame() {
    
        reservationQueries = new ReservationQueries();
        waitlistQueries = new WaitlistQueries();
        roomQueries = new RoomQueries();
        
        try {
            reservationsTableModel = new ResultSetTableModel("select * from reservations");
            waitListTableModel = new ResultSetTableModel("select * from waitlist");
            reservationsTableModelByFaculty = new ResultSetTableModel("select room, date from reservations where faculty = (?)", "" );
            waitListTableModelByFaculty = new ResultSetTableModel("select date from waitlist where faculty = (?)", "" );
        } catch (SQLException ex) {
            System.out.print("Error Loading Database");
        }
        
        initComponents();
        
        rebuildFacultyComboBoxes();
        rebuildDateComboBoxes();
        rebuildFacultyDateComboBoxes();
        rebuildRoomComboBoxes();
      
    }
    
    public void rebuildFacultyComboBoxes()
    {
        selectFacultyComboBox.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray()));
        facultyStatusComboBox.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray())); 
    }
    public void rebuildDateComboBoxes(){
        
        selectDateComboBox.setModel(new javax.swing.DefaultComboBoxModel(Dates.getAllDates().toArray()));
        reservationsByDateComboBox.setModel(new javax.swing.DefaultComboBoxModel(Dates.getAllDates().toArray()));
    }
    public void rebuildFacultyDateComboBoxes(){
        ArrayList<Entry> allEntries = new ArrayList<>();
        
        allEntries.addAll(reservationQueries.getReservations());
        allEntries.addAll(waitlistQueries.getWaitlist());
        
        cancelFacultyReservationComboBox.setModel(new javax.swing.DefaultComboBoxModel(allEntries.toArray()));   
    }
    public void rebuildRoomComboBoxes(){
        dropRoomComboBox.setModel(new javax.swing.DefaultComboBoxModel(roomQueries.getAllRooms().toArray()));
    }
    
    private void updateWaitlistTable(){
        Date date;
        date = (Date) reservationsByDateComboBox.getSelectedItem();
        try {
            waitListTableModel.setQuery("select * from waitlist");
        } catch (SQLException ex) {
            infoTextArea.setText("Error Loading Database");
        }
    }
    private void updateReservationsTable(){
        Date date;
        date = (Date) reservationsByDateComboBox.getSelectedItem();
        try {
            reservationsTableModel.setQuery("select * from reservations where date = (?)", date);
        } catch (SQLException ex) {
            infoTextArea.setText("Error Loading Database");
        }
    }
    private void updateReservationsbyFacultyTables(){
        String faculty;
        faculty = facultyStatusComboBox.getSelectedItem().toString();
        try{
            reservationsTableModelByFaculty.setQuery("select room, date from reservations where faculty = (?)", faculty);
            waitListTableModelByFaculty.setQuery("select date from waitlist where faculty = (?)", faculty);
        }
        catch (SQLException ex) {
            System.out.print("Error Loading Database\n");
            System.out.print(ex);
        }  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        actionTabbedPane = new javax.swing.JTabbedPane();
        addPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        addFacultyTextField = new javax.swing.JTextField();
        addFacultyButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        addRoomNameTextField = new javax.swing.JTextField();
        addRoomSeatsTextField = new javax.swing.JTextField();
        addRoomButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        addDateButton = new javax.swing.JButton();
        addDateSpinner = new javax.swing.JSpinner();
        reservePanel = new javax.swing.JPanel();
        facultyLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        seatsLabel = new javax.swing.JLabel();
        selectFacultyComboBox = new javax.swing.JComboBox<>();
        selectDateComboBox = new javax.swing.JComboBox<>();
        seatsTextField = new javax.swing.JTextField();
        reserveButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        cancelReservationButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        cancelFacultyReservationComboBox = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        dropRoomComboBox = new javax.swing.JComboBox<>();
        dropRoomButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        statusTabbedPane = new javax.swing.JTabbedPane();
        datePanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        reservationsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        reservationsByDateComboBox = new javax.swing.JComboBox<>();
        waitListPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        waitListTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        facultyStatusComboBox = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        actionLabel = new javax.swing.JLabel();
        infoLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        actionTabbedPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        nameLabel.setText("Faculty Name:");

        addFacultyButton.setText("Add");
        addFacultyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFacultyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(nameLabel)
                        .addGap(18, 18, 18)
                        .addComponent(addFacultyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(addFacultyButton)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(addFacultyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(addFacultyButton)
                .addContainerGap(146, Short.MAX_VALUE))
        );

        actionTabbedPane.addTab("Add Faculty", addPanel);

        jLabel3.setText("Room Name:");

        jLabel4.setText("Seats:");

        addRoomButton.setText("Add");
        addRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(61, 61, 61)
                        .addComponent(addRoomNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(addRoomButton)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(91, 91, 91)
                            .addComponent(addRoomSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(146, 178, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(addRoomNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(addRoomSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(addRoomButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        actionTabbedPane.addTab("Add Room", jPanel1);

        jLabel5.setText("Date:");

        addDateButton.setText("Add");
        addDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDateButtonActionPerformed(evt);
            }
        });

        addDateSpinner.setModel(new javax.swing.SpinnerDateModel());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(addDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(addDateButton)))
                .addContainerGap(215, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(addDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addComponent(addDateButton)
                .addContainerGap(127, Short.MAX_VALUE))
        );

        actionTabbedPane.addTab("Add Date", jPanel2);

        facultyLabel.setText("Faculty:");

        dateLabel.setText("Date:");

        seatsLabel.setText("Seats:");

        selectFacultyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        selectDateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        reserveButton.setText("Reserve");
        reserveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout reservePanelLayout = new javax.swing.GroupLayout(reservePanel);
        reservePanel.setLayout(reservePanelLayout);
        reservePanelLayout.setHorizontalGroup(
            reservePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reservePanelLayout.createSequentialGroup()
                .addGroup(reservePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reservePanelLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(reservePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(facultyLabel)
                            .addComponent(dateLabel)
                            .addComponent(seatsLabel))
                        .addGap(18, 18, 18)
                        .addGroup(reservePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(seatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectFacultyComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(selectDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(reservePanelLayout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(reserveButton)))
                .addContainerGap(202, Short.MAX_VALUE))
        );
        reservePanelLayout.setVerticalGroup(
            reservePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reservePanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(reservePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(facultyLabel)
                    .addComponent(selectFacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(reservePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(selectDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(reservePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seatsLabel)
                    .addComponent(seatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reserveButton)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        actionTabbedPane.addTab("Reserve Room", reservePanel);

        cancelReservationButton.setText("Apply");
        cancelReservationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelReservationButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Faculty - Date:");

        cancelFacultyReservationComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(cancelFacultyReservationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(cancelReservationButton)))
                .addContainerGap(215, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cancelFacultyReservationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(98, 98, 98)
                .addComponent(cancelReservationButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        actionTabbedPane.addTab("Cancel Reservation", jPanel4);

        jLabel6.setText("Room:");

        dropRoomComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dropRoomButton.setText("Drop");
        dropRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropRoomButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(dropRoomComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(dropRoomButton)))
                .addContainerGap(212, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(dropRoomComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(85, 85, 85)
                .addComponent(dropRoomButton)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        actionTabbedPane.addTab("Drop Room", jPanel5);

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        titleLabel.setText("Room Scheduler");

        statusTabbedPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        reservationsTable.setAutoCreateRowSorter(true);
        reservationsTable.setModel(reservationsTableModel);
        reservationsTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(reservationsTable);

        jLabel1.setText("Date:");

        reservationsByDateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        reservationsByDateComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservationsByDateComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout datePanelLayout = new javax.swing.GroupLayout(datePanel);
        datePanel.setLayout(datePanelLayout);
        datePanelLayout.setHorizontalGroup(
            datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                    .addGroup(datePanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(reservationsByDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        datePanelLayout.setVerticalGroup(
            datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reservationsByDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        statusTabbedPane.addTab("Reservations by Date", datePanel);

        waitListTable.setAutoCreateRowSorter(true);
        waitListTable.setModel(waitListTableModel);
        jScrollPane3.setViewportView(waitListTable);

        jLabel2.setText("Select a Column Header to Sort by that Value.");

        javax.swing.GroupLayout waitListPanelLayout = new javax.swing.GroupLayout(waitListPanel);
        waitListPanel.setLayout(waitListPanelLayout);
        waitListPanelLayout.setHorizontalGroup(
            waitListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(waitListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(waitListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                    .addGroup(waitListPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        waitListPanelLayout.setVerticalGroup(
            waitListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, waitListPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        statusTabbedPane.addTab("Waiting List", waitListPanel);

        jLabel9.setText("Faculty:");

        facultyStatusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        facultyStatusComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facultyStatusComboBoxActionPerformed(evt);
            }
        });

        jTable1.setModel(reservationsTableModelByFaculty);
        jScrollPane4.setViewportView(jTable1);

        jTable2.setModel(waitListTableModelByFaculty);
        jTable2.setOpaque(false);
        jTable2.setPreferredSize(new java.awt.Dimension(50, 64));
        jScrollPane5.setViewportView(jTable2);

        jLabel8.setText("Reservations");

        jLabel10.setText("Waitlist");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(facultyStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(80, 80, 80))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(facultyStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        statusTabbedPane.addTab("Faculty Member", jPanel3);

        statusLabel.setText("Status:");

        actionLabel.setText("Actions:");

        infoLabel.setText("Info:");

        infoTextArea.setColumns(20);
        infoTextArea.setRows(5);
        jScrollPane1.setViewportView(infoTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(titleLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(actionTabbedPane)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(infoLabel)
                                    .addComponent(actionLabel))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statusLabel)
                            .addComponent(statusTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusLabel)
                    .addComponent(actionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(actionTabbedPane)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(infoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addComponent(statusTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addFacultyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFacultyButtonActionPerformed
        // TODO add your handling code here:
        // Add the faculty to the faculty table.
        String name = addFacultyTextField.getText();
        Faculty.addFaculty(name);
        infoTextArea.setText(name+" has been added to the Faculty.");
        
        // rebuild the reservation faculty combo box.
        rebuildFacultyComboBoxes();
    }//GEN-LAST:event_addFacultyButtonActionPerformed

    private void reserveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveButtonActionPerformed
        // TODO add your handling code here:
        String faculty;
        int requestedSeats;
        Timestamp currentTimestamp;
        RoomEntry reservedRoom;
        Date date;
        
        faculty = selectFacultyComboBox.getSelectedItem().toString();
        date = (Date) selectDateComboBox.getSelectedItem();
        currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
        try {
            requestedSeats = Integer.parseInt(seatsTextField.getText());
            
            reservedRoom = reservationQueries.addReservationEntry(faculty, date, requestedSeats , currentTimestamp); 

            if (reservedRoom.getRoom() != ""){
                infoTextArea.setText("Reservation Added for " + faculty + " on " + date + " for room " + reservedRoom.getRoom() + " with " + reservedRoom.getSeats() + " seats.");
            }
            else{

                waitlistQueries.addWaitlistEntry(faculty, date, requestedSeats, currentTimestamp);
                infoTextArea.setText("Added to Waitlist for " + faculty + " on " + date + " with " + requestedSeats + " requested seats.");
            }

            rebuildFacultyDateComboBoxes();
            
            updateWaitlistTable();
            updateReservationsTable();
            updateReservationsbyFacultyTables();
        
        }
        catch (NumberFormatException e)
        {
            infoTextArea.setText("Please enter an integer for the seats field");  
        }

    }//GEN-LAST:event_reserveButtonActionPerformed
      
    private void reservationsByDateComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservationsByDateComboBoxActionPerformed
        // TODO add your handling code here:
        updateReservationsTable();
    }//GEN-LAST:event_reservationsByDateComboBoxActionPerformed

    private void addDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDateButtonActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
        String spinnerValue = formater.format(addDateSpinner.getValue());
        Date day = Date.valueOf(spinnerValue);
        Dates.addDate(day); 
        rebuildDateComboBoxes();
        
        infoTextArea.setText("Date " + day + " has been added.");
        
    }//GEN-LAST:event_addDateButtonActionPerformed

    private void checkRoomOpenings(){
        ArrayList<WaitListEntry> waitlistEntries = new ArrayList<WaitListEntry>();
        waitlistEntries = waitlistQueries.getWaitlist();
        RoomEntry reserveRoom;

        for (WaitListEntry entry: waitlistEntries){
            reserveRoom = reservationQueries.addReservationEntry(entry.getFaculty(), entry.getDate(), entry.getSeats(), entry.getTimestamp());
            if (reserveRoom.getRoom() != ""){
                waitlistQueries.deleteWaitlistEntry(entry.getFaculty(), entry.getDate());
                infoTextArea.append("\n" + entry.getFaculty() + " has been taken off the Waitlist.\nReservation Added for " + entry.getFaculty() + " on " + entry.getDate() + " for room " + reserveRoom.getRoom() + " with " + reserveRoom.getSeats() + " seats.");
            }
        }
    }

    private void addRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomButtonActionPerformed
        
        String addRoomName;
        int addRoomSeats;
        try {
            
            addRoomName = addRoomNameTextField.getText();
            addRoomSeats = Integer.parseInt(addRoomSeatsTextField.getText());
            
            roomQueries.addRoom(addRoomName, addRoomSeats);
            
            infoTextArea.setText("Room " + addRoomName + " has been added.");
 
            checkRoomOpenings();
            
            updateWaitlistTable();
            updateReservationsTable();
            updateReservationsbyFacultyTables();
            
            rebuildRoomComboBoxes();
            rebuildFacultyDateComboBoxes();
        
        }
        catch (NumberFormatException e)
        {
            infoTextArea.setText("Please enter an integer for the seats field");
            
        }
    }//GEN-LAST:event_addRoomButtonActionPerformed

    private void cancelReservationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelReservationButtonActionPerformed
        // TODO add your handling code here:
        
        
        if (cancelFacultyReservationComboBox.getSelectedItem().getClass() == ReservationEntry.class) {
            ReservationEntry entry;
            entry =  (ReservationEntry) cancelFacultyReservationComboBox.getSelectedItem();
            reservationQueries.deleteReservationEntry(entry.getFaculty(), entry.getDate(), entry.getRoom());
            infoTextArea.setText("Reservation for " + entry.getFaculty() + " on " + entry.getDate() + " has been removed.");
            checkRoomOpenings();
            
            
        }
        else{
            WaitListEntry entry;
            entry =  (WaitListEntry) cancelFacultyReservationComboBox.getSelectedItem();
            
            waitlistQueries.deleteWaitlistEntry(entry.getFaculty(), entry.getDate());
            infoTextArea.setText("Waitlist Entry for " + entry.getFaculty() + " on " + entry.getDate() + " has been removed.");
        }
        
        rebuildFacultyDateComboBoxes();
        
        updateWaitlistTable();
        updateReservationsTable();
        updateReservationsbyFacultyTables();
    }//GEN-LAST:event_cancelReservationButtonActionPerformed

    private void dropRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropRoomButtonActionPerformed
        // TODO add your handling code here:
        RoomEntry room;
        room = (RoomEntry) dropRoomComboBox.getSelectedItem();
        roomQueries.dropRoom(room.getRoom());
        infoTextArea.setText("Room " + room.getRoom() + " has been removed.");
        
        ArrayList<ReservationEntry> droppedReservations;
        
        droppedReservations = reservationQueries.getReservationsByRoom(room.getRoom());
        
        waitlistQueries.addWaitlistEntries(droppedReservations);     

        RoomEntry reserveRoom;

        for (ReservationEntry entry: droppedReservations){
            
            reservationQueries.deleteReservationEntry(entry.getFaculty(), entry.getDate(), entry.getRoom());

            reserveRoom = reservationQueries.addReservationEntry(entry.getFaculty(), entry.getDate(), entry.getSeats(), entry.getTimestamp());
            
            if (reserveRoom.getRoom() != ""){
                waitlistQueries.deleteWaitlistEntry(entry.getFaculty(), entry.getDate());
                
                infoTextArea.append("\nNew room given to " + entry.getFaculty() + " on " + entry.getDate() + " for room " + reserveRoom.getRoom() + " with " + reserveRoom.getSeats() + " seats.");
            }
            else{
                infoTextArea.append("\nRoom could not be found for " + entry.getFaculty() + "\nAdded to Waitlist for " + entry.getFaculty() + " on " + entry.getDate() + " with " + entry.getSeats() + " requested seats.");
            }
        }
        
        rebuildFacultyDateComboBoxes();
        updateWaitlistTable();
        updateReservationsTable();
        updateReservationsbyFacultyTables();
        
    }//GEN-LAST:event_dropRoomButtonActionPerformed

    private void facultyStatusComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facultyStatusComboBoxActionPerformed
        updateReservationsbyFacultyTables();
    }//GEN-LAST:event_facultyStatusComboBoxActionPerformed
        

        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomSchedulerFrame().setVisible(true);
            }
        });
        

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel actionLabel;
    private javax.swing.JTabbedPane actionTabbedPane;
    private javax.swing.JButton addDateButton;
    private javax.swing.JSpinner addDateSpinner;
    private javax.swing.JButton addFacultyButton;
    private javax.swing.JTextField addFacultyTextField;
    private javax.swing.JPanel addPanel;
    private javax.swing.JButton addRoomButton;
    private javax.swing.JTextField addRoomNameTextField;
    private javax.swing.JTextField addRoomSeatsTextField;
    private javax.swing.JComboBox<String> cancelFacultyReservationComboBox;
    private javax.swing.JButton cancelReservationButton;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JPanel datePanel;
    private javax.swing.JButton dropRoomButton;
    private javax.swing.JComboBox<String> dropRoomComboBox;
    private javax.swing.JLabel facultyLabel;
    private javax.swing.JComboBox<String> facultyStatusComboBox;
    private javax.swing.JLabel infoLabel;
    private static javax.swing.JTextArea infoTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JComboBox<String> reservationsByDateComboBox;
    private static javax.swing.JTable reservationsTable;
    private javax.swing.JButton reserveButton;
    private javax.swing.JPanel reservePanel;
    private javax.swing.JLabel seatsLabel;
    private javax.swing.JTextField seatsTextField;
    private javax.swing.JComboBox<String> selectDateComboBox;
    private javax.swing.JComboBox<String> selectFacultyComboBox;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JTabbedPane statusTabbedPane;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel waitListPanel;
    private javax.swing.JTable waitListTable;
    // End of variables declaration//GEN-END:variables
}
